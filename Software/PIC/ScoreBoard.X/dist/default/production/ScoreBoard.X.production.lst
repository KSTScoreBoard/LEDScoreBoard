

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Feb 01 21:21:22 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F1938 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  008C                     	;# 
    86  008D                     	;# 
    87  008E                     	;# 
    88  0090                     	;# 
    89  0091                     	;# 
    90  0092                     	;# 
    91  0093                     	;# 
    92  0095                     	;# 
    93  0096                     	;# 
    94  0097                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009A                     	;# 
    98  009B                     	;# 
    99  009B                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  0110                     	;# 
   107  0111                     	;# 
   108  0112                     	;# 
   109  0113                     	;# 
   110  0114                     	;# 
   111  0115                     	;# 
   112  0116                     	;# 
   113  0117                     	;# 
   114  0118                     	;# 
   115  0119                     	;# 
   116  011A                     	;# 
   117  011B                     	;# 
   118  011D                     	;# 
   119  018C                     	;# 
   120  018D                     	;# 
   121  0191                     	;# 
   122  0191                     	;# 
   123  0192                     	;# 
   124  0193                     	;# 
   125  0193                     	;# 
   126  0193                     	;# 
   127  0194                     	;# 
   128  0195                     	;# 
   129  0196                     	;# 
   130  0199                     	;# 
   131  019A                     	;# 
   132  019B                     	;# 
   133  019B                     	;# 
   134  019B                     	;# 
   135  019B                     	;# 
   136  019C                     	;# 
   137  019C                     	;# 
   138  019D                     	;# 
   139  019E                     	;# 
   140  019F                     	;# 
   141  020D                     	;# 
   142  0210                     	;# 
   143  0211                     	;# 
   144  0212                     	;# 
   145  0213                     	;# 
   146  0214                     	;# 
   147  0215                     	;# 
   148  0215                     	;# 
   149  0216                     	;# 
   150  0217                     	;# 
   151  0291                     	;# 
   152  0291                     	;# 
   153  0292                     	;# 
   154  0293                     	;# 
   155  0294                     	;# 
   156  0295                     	;# 
   157  0295                     	;# 
   158  0296                     	;# 
   159  0298                     	;# 
   160  0298                     	;# 
   161  0299                     	;# 
   162  029A                     	;# 
   163  029B                     	;# 
   164  029C                     	;# 
   165  029C                     	;# 
   166  029D                     	;# 
   167  029E                     	;# 
   168  029F                     	;# 
   169  0311                     	;# 
   170  0311                     	;# 
   171  0312                     	;# 
   172  0313                     	;# 
   173  0314                     	;# 
   174  0315                     	;# 
   175  0315                     	;# 
   176  0316                     	;# 
   177  0318                     	;# 
   178  0318                     	;# 
   179  0319                     	;# 
   180  031A                     	;# 
   181  031C                     	;# 
   182  031C                     	;# 
   183  031D                     	;# 
   184  031E                     	;# 
   185  0394                     	;# 
   186  0395                     	;# 
   187  0396                     	;# 
   188  0415                     	;# 
   189  0416                     	;# 
   190  0417                     	;# 
   191  041C                     	;# 
   192  041D                     	;# 
   193  041E                     	;# 
   194  0791                     	;# 
   195  0792                     	;# 
   196  0793                     	;# 
   197  0794                     	;# 
   198  0795                     	;# 
   199  0798                     	;# 
   200  0799                     	;# 
   201  07A0                     	;# 
   202  07A1                     	;# 
   203  07A3                     	;# 
   204  07A4                     	;# 
   205  07A6                     	;# 
   206  07A7                     	;# 
   207  07A9                     	;# 
   208  07AA                     	;# 
   209  0FE4                     	;# 
   210  0FE5                     	;# 
   211  0FE6                     	;# 
   212  0FE7                     	;# 
   213  0FE8                     	;# 
   214  0FE9                     	;# 
   215  0FEA                     	;# 
   216  0FEB                     	;# 
   217  0FED                     	;# 
   218  0FEE                     	;# 
   219  0FEF                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  0010                     	;# 
   236  0011                     	;# 
   237  0012                     	;# 
   238  0013                     	;# 
   239  0015                     	;# 
   240  0016                     	;# 
   241  0016                     	;# 
   242  0017                     	;# 
   243  0018                     	;# 
   244  0019                     	;# 
   245  001A                     	;# 
   246  001B                     	;# 
   247  001C                     	;# 
   248  001E                     	;# 
   249  001F                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  010C                     	;# 
   269  010D                     	;# 
   270  010E                     	;# 
   271  0110                     	;# 
   272  0111                     	;# 
   273  0112                     	;# 
   274  0113                     	;# 
   275  0114                     	;# 
   276  0115                     	;# 
   277  0116                     	;# 
   278  0117                     	;# 
   279  0118                     	;# 
   280  0119                     	;# 
   281  011A                     	;# 
   282  011B                     	;# 
   283  011D                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  0191                     	;# 
   287  0191                     	;# 
   288  0192                     	;# 
   289  0193                     	;# 
   290  0193                     	;# 
   291  0193                     	;# 
   292  0194                     	;# 
   293  0195                     	;# 
   294  0196                     	;# 
   295  0199                     	;# 
   296  019A                     	;# 
   297  019B                     	;# 
   298  019B                     	;# 
   299  019B                     	;# 
   300  019B                     	;# 
   301  019C                     	;# 
   302  019C                     	;# 
   303  019D                     	;# 
   304  019E                     	;# 
   305  019F                     	;# 
   306  020D                     	;# 
   307  0210                     	;# 
   308  0211                     	;# 
   309  0212                     	;# 
   310  0213                     	;# 
   311  0214                     	;# 
   312  0215                     	;# 
   313  0215                     	;# 
   314  0216                     	;# 
   315  0217                     	;# 
   316  0291                     	;# 
   317  0291                     	;# 
   318  0292                     	;# 
   319  0293                     	;# 
   320  0294                     	;# 
   321  0295                     	;# 
   322  0295                     	;# 
   323  0296                     	;# 
   324  0298                     	;# 
   325  0298                     	;# 
   326  0299                     	;# 
   327  029A                     	;# 
   328  029B                     	;# 
   329  029C                     	;# 
   330  029C                     	;# 
   331  029D                     	;# 
   332  029E                     	;# 
   333  029F                     	;# 
   334  0311                     	;# 
   335  0311                     	;# 
   336  0312                     	;# 
   337  0313                     	;# 
   338  0314                     	;# 
   339  0315                     	;# 
   340  0315                     	;# 
   341  0316                     	;# 
   342  0318                     	;# 
   343  0318                     	;# 
   344  0319                     	;# 
   345  031A                     	;# 
   346  031C                     	;# 
   347  031C                     	;# 
   348  031D                     	;# 
   349  031E                     	;# 
   350  0394                     	;# 
   351  0395                     	;# 
   352  0396                     	;# 
   353  0415                     	;# 
   354  0416                     	;# 
   355  0417                     	;# 
   356  041C                     	;# 
   357  041D                     	;# 
   358  041E                     	;# 
   359  0791                     	;# 
   360  0792                     	;# 
   361  0793                     	;# 
   362  0794                     	;# 
   363  0795                     	;# 
   364  0798                     	;# 
   365  0799                     	;# 
   366  07A0                     	;# 
   367  07A1                     	;# 
   368  07A3                     	;# 
   369  07A4                     	;# 
   370  07A6                     	;# 
   371  07A7                     	;# 
   372  07A9                     	;# 
   373  07AA                     	;# 
   374  0FE4                     	;# 
   375  0FE5                     	;# 
   376  0FE6                     	;# 
   377  0FE7                     	;# 
   378  0FE8                     	;# 
   379  0FE9                     	;# 
   380  0FEA                     	;# 
   381  0FEB                     	;# 
   382  0FED                     	;# 
   383  0FEE                     	;# 
   384  0FEF                     	;# 
   385                           
   386                           	psect	idataBANK0
   387  036E                     __pidataBANK0:
   388                           
   389                           ;initializer for _segment
   390  036E  3440               	retlw	64
   391  036F  3479               	retlw	121
   392  0370  3424               	retlw	36
   393  0371  3430               	retlw	48
   394  0372  3419               	retlw	25
   395  0373  3412               	retlw	18
   396  0374  3402               	retlw	2
   397  0375  3478               	retlw	120
   398  0376  3400               	retlw	0
   399  0377  3410               	retlw	16
   400                           
   401                           ;initializer for ICR@index
   402  0378  3401               	retlw	1
   403  000C                     _PORTA	set	12
   404  000E                     _PORTC	set	14
   405  000D                     _PORTB	set	13
   406  0015                     _TMR0	set	21
   407  006D                     _RB5	set	109
   408  006C                     _RB4	set	108
   409  006B                     _RB3	set	107
   410  006A                     _RB2	set	106
   411  0069                     _RB1	set	105
   412  0068                     _RB0	set	104
   413  005F                     _GIE	set	95
   414  008B                     _SSPIF	set	139
   415  005D                     _T0IE	set	93
   416  005A                     _T0IF	set	90
   417  0075                     _RC5	set	117
   418  0076                     _RC6	set	118
   419  008E                     _TRISC	set	142
   420  008D                     _TRISB	set	141
   421  008C                     _TRISA	set	140
   422  0095                     _OPTION_REGbits	set	149
   423  0099                     _OSCCON	set	153
   424  048B                     _SSPIE	set	1163
   425  018D                     _ANSELB	set	397
   426  018C                     _ANSELA	set	396
   427  0211                     _SSPBUF	set	529
   428  0213                     _SSPMSK	set	531
   429  0212                     _SSPADD	set	530
   430  0216                     _SSPCON2	set	534
   431  0215                     _SSPCON1	set	533
   432  0214                     _SSPSTAT	set	532
   433  020D                     _WPUB	set	525
   434                           
   435                           	psect	cinit
   436  019E                     start_initialization:	
   437                           ; #config settings
   438                           
   439  019E                     __initialization:
   440                           
   441                           ; Initialize objects allocated to BANK0
   442  019E  306E               	movlw	low __pidataBANK0
   443  019F  0084               	movwf	4
   444  01A0  3083               	movlw	(high __pidataBANK0)| (0+128)
   445  01A1  0085               	movwf	5
   446  01A2  3037               	movlw	low __pdataBANK0
   447  01A3  0086               	movwf	6
   448  01A4  3000               	movlw	high __pdataBANK0
   449  01A5  0087               	movwf	7
   450  01A6  300B               	movlw	11
   451  01A7  3183  2379  3181   	fcall	init_ram
   452                           
   453                           ; Clear objects allocated to BANK0
   454  01AA  3020               	movlw	low __pbssBANK0
   455  01AB  0084               	movwf	4
   456  01AC  3000               	movlw	high __pbssBANK0
   457  01AD  0085               	movwf	5
   458  01AE  3017               	movlw	23
   459  01AF  3183  237F  3181   	fcall	clear_ram0
   460  01B2                     end_of_initialization:	
   461                           ;End of C runtime variable initialization code
   462                           
   463  01B2                     __end_of__initialization:
   464  01B2  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   465  01B3  0020               	movlb	0
   466  01B4  3181  29B6         	ljmp	_main	;jump to C main() function
   467                           
   468                           	psect	bssBANK0
   469  0020                     __pbssBANK0:
   470  0020                     _score_dig:
   471  0020                     	ds	6
   472  0026                     _roll:
   473  0026                     	ds	3
   474  0029                     _recv_data:
   475  0029                     	ds	3
   476  002C                     ICR@count:
   477  002C                     	ds	2
   478  002E                     ICR@score:
   479  002E                     	ds	2
   480  0030                     _recv_score:
   481  0030                     	ds	2
   482  0032                     _disable:
   483  0032                     	ds	1
   484  0033                     _roll_number:
   485  0033                     	ds	1
   486  0034                     _send:
   487  0034                     	ds	1
   488  0035                     _buf:
   489  0035                     	ds	1
   490  0036                     _recv_count:
   491  0036                     	ds	1
   492                           
   493                           	psect	dataBANK0
   494  0037                     __pdataBANK0:
   495  0037                     _segment:
   496  0037                     	ds	10
   497  0041                     ICR@index:
   498  0041                     	ds	1
   499                           
   500                           	psect	inittext
   501  0379                     init_ram:
   502  0379  00FE               	movwf	btemp
   503  037A                     initloop:
   504  037A  0012               	moviw fsr0++
   505  037B  001E               	movwi fsr1++
   506  037C  0BFE               	decfsz	btemp,f
   507  037D  2B7A               	goto	initloop
   508  037E  3400               	retlw	0
   509                           
   510                           	psect	clrtext
   511  037F                     clear_ram0:	
   512                           ;	Called with FSR0 containing the base address, and
   513                           ;	WREG with the size to clear
   514                           
   515  037F  0064               	clrwdt	;clear the watchdog before getting into this loop
   516  0380                     clrloop0:
   517  0380  0180               	clrf	0	;clear RAM location pointed to by FSR
   518  0381  3101               	addfsr 0,1
   519  0382  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   520  0383  2B80               	goto	clrloop0	;have we reached the end yet?
   521  0384  3400               	retlw	0	;all done for this memory range, return
   522                           
   523                           	psect	cstackCOMMON
   524  0070                     __pcstackCOMMON:
   525  0070                     ?_main:
   526  0070                     ?_ICR:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0070                     ?___wmul:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0070                     ?___awmod:	
   533                           ; 2 bytes @ 0x0
   534                           
   535  0070                     ?___lwmod:	
   536                           ; 2 bytes @ 0x0
   537                           
   538  0070                     ___wmul@multiplier:	
   539                           ; 2 bytes @ 0x0
   540                           
   541  0070                     ___awmod@divisor:	
   542                           ; 2 bytes @ 0x0
   543                           
   544  0070                     ___lwmod@divisor:	
   545                           ; 2 bytes @ 0x0
   546                           
   547                           
   548                           ; 2 bytes @ 0x0
   549  0070                     	ds	2
   550  0072                     ___wmul@multiplicand:
   551  0072                     ___awmod@dividend:	
   552                           ; 2 bytes @ 0x2
   553                           
   554  0072                     ___lwmod@dividend:	
   555                           ; 2 bytes @ 0x2
   556                           
   557                           
   558                           ; 2 bytes @ 0x2
   559  0072                     	ds	2
   560  0074                     ??___wmul:
   561  0074                     ??___awmod:	
   562                           ; 1 bytes @ 0x4
   563                           
   564  0074                     ??___lwmod:	
   565                           ; 1 bytes @ 0x4
   566                           
   567  0074                     ___wmul@product:	
   568                           ; 1 bytes @ 0x4
   569                           
   570                           
   571                           ; 2 bytes @ 0x4
   572  0074                     	ds	1
   573  0075                     ___awmod@counter:
   574  0075                     ___lwmod@counter:	
   575                           ; 1 bytes @ 0x5
   576                           
   577                           
   578                           ; 1 bytes @ 0x5
   579  0075                     	ds	1
   580  0076                     ?___lwdiv:
   581  0076                     ___awmod@sign:	
   582                           ; 2 bytes @ 0x6
   583                           
   584  0076                     ___lwdiv@divisor:	
   585                           ; 1 bytes @ 0x6
   586                           
   587                           
   588                           ; 2 bytes @ 0x6
   589  0076                     	ds	2
   590  0078                     ___lwdiv@dividend:
   591                           
   592                           ; 2 bytes @ 0x8
   593  0078                     	ds	2
   594  007A                     ??___lwdiv:
   595                           
   596                           ; 1 bytes @ 0xA
   597  007A                     	ds	1
   598  007B                     ___lwdiv@quotient:
   599                           
   600                           ; 2 bytes @ 0xB
   601  007B                     	ds	2
   602  007D                     ___lwdiv@counter:
   603                           
   604                           ; 1 bytes @ 0xD
   605  007D                     	ds	1
   606                           
   607                           	psect	cstackBANK0
   608  0042                     __pcstackBANK0:
   609  0042                     ??_ICR:
   610                           
   611                           ; 1 bytes @ 0x0
   612  0042                     	ds	4
   613  0046                     ??_main:
   614                           
   615                           ; 1 bytes @ 0x4
   616  0046                     	ds	2
   617  0048                     main@address:
   618                           
   619                           ; 1 bytes @ 0x6
   620  0048                     	ds	1
   621                           
   622                           	psect	maintext
   623  01B6                     __pmaintext:	
   624 ;;
   625 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   626 ;;
   627 ;; *************** function _main *****************
   628 ;; Defined at:
   629 ;;		line 70 in file "main.c"
   630 ;; Parameters:    Size  Location     Type
   631 ;;		None
   632 ;; Auto vars:     Size  Location     Type
   633 ;;  address         1    6[BANK0 ] unsigned char 
   634 ;; Return value:  Size  Location     Type
   635 ;;                  1    wreg      void 
   636 ;; Registers used:
   637 ;;		wreg, fsr1l, fsr1h, status,2, status,0
   638 ;; Tracked objects:
   639 ;;		On entry : B1F/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   644 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
   645 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   646 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
   647 ;;Total ram usage:        3 bytes
   648 ;; Hardware stack levels required when called:    2
   649 ;; This function calls:
   650 ;;		Nothing
   651 ;; This function is called by:
   652 ;;		Startup code after reset
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656                           
   657                           ;psect for function _main
   658  01B6                     _main:
   659  01B6                     l1115:	
   660                           ;incstack = 0
   661                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0]
   662                           
   663                           
   664                           ;main.c: 71:     OSCCON = 0b01110000;
   665  01B6  3070               	movlw	112
   666  01B7  0021               	movlb	1	; select bank1
   667  01B8  0099               	movwf	25	;volatile
   668  01B9                     l1117:
   669                           
   670                           ;main.c: 72:     OPTION_REGbits.nWPUEN = 0x00;
   671  01B9  1395               	bcf	21,7	;volatile
   672  01BA                     l1119:
   673                           
   674                           ;main.c: 74:     ANSELA = 0x00;
   675  01BA  0023               	movlb	3	; select bank3
   676  01BB  018C               	clrf	12	;volatile
   677  01BC                     l1121:
   678                           
   679                           ;main.c: 75:     TRISA = 0x00;
   680  01BC  0021               	movlb	1	; select bank1
   681  01BD  018C               	clrf	12	;volatile
   682                           
   683                           ;main.c: 76:     ANSELB = 0xC0;
   684  01BE  30C0               	movlw	192
   685  01BF  0023               	movlb	3	; select bank3
   686  01C0  008D               	movwf	13	;volatile
   687                           
   688                           ;main.c: 77:     TRISB = 0x3F;
   689  01C1  303F               	movlw	63
   690  01C2  0021               	movlb	1	; select bank1
   691  01C3  008D               	movwf	13	;volatile
   692                           
   693                           ;main.c: 78:     WPUB = 0x3F;
   694  01C4  303F               	movlw	63
   695  01C5  0024               	movlb	4	; select bank4
   696  01C6  008D               	movwf	13	;volatile
   697                           
   698                           ;main.c: 79:     TRISC = 0b1111000;
   699  01C7  3078               	movlw	120
   700  01C8  0021               	movlb	1	; select bank1
   701  01C9  008E               	movwf	14	;volatile
   702                           
   703                           ;main.c: 81:     SSPSTAT = 0b10000000;
   704  01CA  3080               	movlw	128
   705  01CB  0024               	movlb	4	; select bank4
   706  01CC  0094               	movwf	20	;volatile
   707                           
   708                           ;main.c: 82:     SSPCON1 = 0b00100110;
   709  01CD  3026               	movlw	38
   710  01CE  0095               	movwf	21	;volatile
   711  01CF                     l1123:
   712                           
   713                           ;main.c: 83:     SSPCON2 |= 0x01;
   714  01CF  1416               	bsf	22,0	;volatile
   715                           
   716                           ;main.c: 84:     unsigned char address = (RC6) + (RC5 << 1);
   717  01D0  3000               	movlw	0
   718  01D1  0020               	movlb	0	; select bank0
   719  01D2  1A8E               	btfsc	14,5	;volatile
   720  01D3  3002               	movlw	2
   721  01D4  1B0E               	btfsc	14,6	;volatile
   722  01D5  3E01               	addlw	1
   723  01D6  00C6               	movwf	??_main
   724  01D7  0846               	movf	??_main,w
   725  01D8  00C8               	movwf	main@address
   726  01D9                     l1125:
   727                           
   728                           ;main.c: 85:     SSPADD = (address << 1) & 0xFE;
   729  01D9  3548               	lslf	main@address,w
   730  01DA  39FE               	andlw	254
   731  01DB  0024               	movlb	4	; select bank4
   732  01DC  0092               	movwf	18	;volatile
   733  01DD                     l1127:
   734                           
   735                           ;main.c: 86:     SSPMSK = 0xFE;
   736  01DD  30FE               	movlw	254
   737  01DE  0093               	movwf	19	;volatile
   738                           
   739                           ;main.c: 88:     OPTION_REGbits.PS = 0b101;
   740  01DF  0021               	movlb	1	; select bank1
   741  01E0  0815               	movf	21,w	;volatile
   742  01E1  39F8               	andlw	-8
   743  01E2  3805               	iorlw	5
   744  01E3  0095               	movwf	21	;volatile
   745  01E4                     l1129:
   746                           
   747                           ;main.c: 89:     OPTION_REGbits.PSA = 0;
   748  01E4  1195               	bcf	21,3	;volatile
   749  01E5                     l1131:
   750                           
   751                           ;main.c: 90:     OPTION_REGbits.TMR0CS = 0;
   752  01E5  1295               	bcf	21,5	;volatile
   753  01E6                     l1133:
   754                           
   755                           ;main.c: 91:     OPTION_REGbits.TMR0SE = 1;
   756  01E6  1615               	bsf	21,4	;volatile
   757  01E7                     l1135:
   758                           
   759                           ;main.c: 92:     TMR0 = 0;
   760  01E7  0020               	movlb	0	; select bank0
   761  01E8  0195               	clrf	21	;volatile
   762  01E9                     l1137:
   763                           
   764                           ;main.c: 93:     T0IF = 0;
   765  01E9  110B               	bcf	11,2	;volatile
   766  01EA                     l1139:
   767                           
   768                           ;main.c: 94:     T0IE = 1;
   769  01EA  168B               	bsf	11,5	;volatile
   770  01EB                     l1141:
   771                           
   772                           ;main.c: 95:     SSPIF = 0;
   773  01EB  1191               	bcf	17,3	;volatile
   774  01EC                     l1143:
   775                           
   776                           ;main.c: 96:     SSPIE = 1;
   777  01EC  0021               	movlb	1	; select bank1
   778  01ED  1591               	bsf	17,3	;volatile
   779  01EE                     l1145:
   780                           
   781                           ;main.c: 97:     GIE = 1;
   782  01EE  178B               	bsf	11,7	;volatile
   783  01EF                     l1147:
   784                           
   785                           ;main.c: 100:         if(PORTB != 0x3F){
   786  01EF  303F               	movlw	63
   787  01F0  0020               	movlb	0	; select bank0
   788  01F1  060D               	xorwf	13,w	;volatile
   789  01F2  1903               	btfsc	3,2
   790  01F3  29F5               	goto	u881
   791  01F4  29F6               	goto	u880
   792  01F5                     u881:
   793  01F5  29EF               	goto	l1147
   794  01F6                     u880:
   795  01F6                     l1149:
   796                           
   797                           ;main.c: 101:             T0IE = 0;
   798  01F6  128B               	bcf	11,5	;volatile
   799                           
   800                           ;main.c: 102:             if(!RB0) score_dig[2]++;
   801  01F7  180D               	btfsc	13,0	;volatile
   802  01F8  29FA               	goto	u891
   803  01F9  29FB               	goto	u890
   804  01FA                     u891:
   805  01FA  29FF               	goto	l1153
   806  01FB                     u890:
   807  01FB                     l1151:
   808  01FB  3001               	movlw	1
   809  01FC  07A4               	addwf	_score_dig+4,f
   810  01FD  3000               	movlw	0
   811  01FE  3DA5               	addwfc	_score_dig+5,f
   812  01FF                     l1153:
   813                           
   814                           ;main.c: 103:             if(!RB1) score_dig[2]--;
   815  01FF  188D               	btfsc	13,1	;volatile
   816  0200  2A02               	goto	u901
   817  0201  2A03               	goto	u900
   818  0202                     u901:
   819  0202  2A07               	goto	l1157
   820  0203                     u900:
   821  0203                     l1155:
   822  0203  30FF               	movlw	255
   823  0204  07A4               	addwf	_score_dig+4,f
   824  0205  30FF               	movlw	255
   825  0206  3DA5               	addwfc	_score_dig+5,f
   826  0207                     l1157:
   827                           
   828                           ;main.c: 104:             if(!RB2) score_dig[1]++;
   829  0207  190D               	btfsc	13,2	;volatile
   830  0208  2A0A               	goto	u911
   831  0209  2A0B               	goto	u910
   832  020A                     u911:
   833  020A  2A0F               	goto	l1161
   834  020B                     u910:
   835  020B                     l1159:
   836  020B  3001               	movlw	1
   837  020C  07A2               	addwf	_score_dig+2,f
   838  020D  3000               	movlw	0
   839  020E  3DA3               	addwfc	_score_dig+3,f
   840  020F                     l1161:
   841                           
   842                           ;main.c: 105:             if(!RB3) score_dig[1]--;
   843  020F  198D               	btfsc	13,3	;volatile
   844  0210  2A12               	goto	u921
   845  0211  2A13               	goto	u920
   846  0212                     u921:
   847  0212  2A17               	goto	l1165
   848  0213                     u920:
   849  0213                     l1163:
   850  0213  30FF               	movlw	255
   851  0214  07A2               	addwf	_score_dig+2,f
   852  0215  30FF               	movlw	255
   853  0216  3DA3               	addwfc	_score_dig+3,f
   854  0217                     l1165:
   855                           
   856                           ;main.c: 106:             if(!RB4) score_dig[0]++;
   857  0217  1A0D               	btfsc	13,4	;volatile
   858  0218  2A1A               	goto	u931
   859  0219  2A1B               	goto	u930
   860  021A                     u931:
   861  021A  2A1F               	goto	l1169
   862  021B                     u930:
   863  021B                     l1167:
   864  021B  3001               	movlw	1
   865  021C  07A0               	addwf	_score_dig,f
   866  021D  3000               	movlw	0
   867  021E  3DA1               	addwfc	_score_dig+1,f
   868  021F                     l1169:
   869                           
   870                           ;main.c: 107:             if(!RB5) score_dig[0]--;
   871  021F  1A8D               	btfsc	13,5	;volatile
   872  0220  2A22               	goto	u941
   873  0221  2A23               	goto	u940
   874  0222                     u941:
   875  0222  2A27               	goto	l1173
   876  0223                     u940:
   877  0223                     l1171:
   878  0223  30FF               	movlw	255
   879  0224  07A0               	addwf	_score_dig,f
   880  0225  30FF               	movlw	255
   881  0226  3DA1               	addwfc	_score_dig+1,f
   882  0227                     l1173:
   883                           
   884                           ;main.c: 108:             if(score_dig[2] < 0)score_dig[2] = 9;
   885  0227  3004               	movlw	4
   886  0228  3E20               	addlw	(low (_score_dig| 0))& (0+255)
   887  0229  0086               	movwf	6
   888  022A  0187               	clrf	7
   889  022B  3141               	addfsr 1,1
   890  022C  1F81               	btfss	1,7
   891  022D  2A2F               	goto	u951
   892  022E  2A30               	goto	u950
   893  022F                     u951:
   894  022F  2A34               	goto	l97
   895  0230                     u950:
   896  0230                     l1175:
   897  0230  3009               	movlw	9
   898  0231  00A4               	movwf	_score_dig+4
   899  0232  3000               	movlw	0
   900  0233  00A5               	movwf	_score_dig+5
   901  0234                     l97:
   902                           
   903                           ;main.c: 109:             if(score_dig[2] > 9)score_dig[2] = 0;
   904  0234  0825               	movf	_score_dig+5,w
   905  0235  3A80               	xorlw	128
   906  0236  00C6               	movwf	??_main
   907  0237  3080               	movlw	128
   908  0238  0246               	subwf	??_main,w
   909  0239  1D03               	skipz
   910  023A  2A3D               	goto	u965
   911  023B  300A               	movlw	10
   912  023C  0224               	subwf	_score_dig+4,w
   913  023D                     u965:
   914  023D  1C03               	skipc
   915  023E  2A40               	goto	u961
   916  023F  2A41               	goto	u960
   917  0240                     u961:
   918  0240  2A44               	goto	l1179
   919  0241                     u960:
   920  0241                     l1177:
   921  0241  0020               	movlb	0	; select bank0
   922  0242  01A4               	clrf	_score_dig+4
   923  0243  01A5               	clrf	_score_dig+5
   924  0244                     l1179:
   925                           
   926                           ;main.c: 110:             if(score_dig[1] < 0)score_dig[1] = 9;
   927  0244  3002               	movlw	2
   928  0245  3E20               	addlw	(low (_score_dig| 0))& (0+255)
   929  0246  0086               	movwf	6
   930  0247  0187               	clrf	7
   931  0248  3141               	addfsr 1,1
   932  0249  1F81               	btfss	1,7
   933  024A  2A4C               	goto	u971
   934  024B  2A4D               	goto	u970
   935  024C                     u971:
   936  024C  2A52               	goto	l99
   937  024D                     u970:
   938  024D                     l1181:
   939  024D  3009               	movlw	9
   940  024E  0020               	movlb	0	; select bank0
   941  024F  00A2               	movwf	_score_dig+2
   942  0250  3000               	movlw	0
   943  0251  00A3               	movwf	_score_dig+3
   944  0252                     l99:
   945                           
   946                           ;main.c: 111:             if(score_dig[1] > 9)score_dig[1] = 0;
   947  0252  0020               	movlb	0	; select bank0
   948  0253  0823               	movf	_score_dig+3,w
   949  0254  3A80               	xorlw	128
   950  0255  00C6               	movwf	??_main
   951  0256  3080               	movlw	128
   952  0257  0246               	subwf	??_main,w
   953  0258  1D03               	skipz
   954  0259  2A5C               	goto	u985
   955  025A  300A               	movlw	10
   956  025B  0222               	subwf	_score_dig+2,w
   957  025C                     u985:
   958  025C  1C03               	skipc
   959  025D  2A5F               	goto	u981
   960  025E  2A60               	goto	u980
   961  025F                     u981:
   962  025F  2A63               	goto	l1185
   963  0260                     u980:
   964  0260                     l1183:
   965  0260  0020               	movlb	0	; select bank0
   966  0261  01A2               	clrf	_score_dig+2
   967  0262  01A3               	clrf	_score_dig+3
   968  0263                     l1185:
   969                           
   970                           ;main.c: 112:             if(score_dig[0] < 0)score_dig[0] = 9;
   971  0263  0020               	movlb	0	; select bank0
   972  0264  1FA1               	btfss	_score_dig+1,7
   973  0265  2A67               	goto	u991
   974  0266  2A68               	goto	u990
   975  0267                     u991:
   976  0267  2A6C               	goto	l101
   977  0268                     u990:
   978  0268                     l1187:
   979  0268  3009               	movlw	9
   980  0269  00A0               	movwf	_score_dig
   981  026A  3000               	movlw	0
   982  026B  00A1               	movwf	_score_dig+1
   983  026C                     l101:
   984                           
   985                           ;main.c: 113:             if(score_dig[0] > 9)score_dig[0] = 0;
   986  026C  0821               	movf	_score_dig+1,w
   987  026D  3A80               	xorlw	128
   988  026E  00C6               	movwf	??_main
   989  026F  3080               	movlw	128
   990  0270  0246               	subwf	??_main,w
   991  0271  1D03               	skipz
   992  0272  2A75               	goto	u1005
   993  0273  300A               	movlw	10
   994  0274  0220               	subwf	_score_dig,w
   995  0275                     u1005:
   996  0275  1C03               	skipc
   997  0276  2A78               	goto	u1001
   998  0277  2A79               	goto	u1000
   999  0278                     u1001:
  1000  0278  2A7C               	goto	l1191
  1001  0279                     u1000:
  1002  0279                     l1189:
  1003  0279  0020               	movlb	0	; select bank0
  1004  027A  01A0               	clrf	_score_dig
  1005  027B  01A1               	clrf	_score_dig+1
  1006  027C                     l1191:
  1007                           
  1008                           ;main.c: 114:             T0IE = 1;
  1009  027C  168B               	bsf	11,5	;volatile
  1010  027D                     l1193:
  1011                           
  1012                           ;main.c: 115:             _delay((unsigned long)((100)*(32000000/4000.0)));
  1013  027D  3005               	movlw	5
  1014  027E  0020               	movlb	0	; select bank0
  1015  027F  00C7               	movwf	??_main+1
  1016  0280  300F               	movlw	15
  1017  0281  00C6               	movwf	??_main
  1018  0282  30F1               	movlw	241
  1019  0283                     u1237:
  1020  0283  0B89               	decfsz	9,f
  1021  0284  2A83               	goto	u1237
  1022  0285  0BC6               	decfsz	??_main,f
  1023  0286  2A83               	goto	u1237
  1024  0287  0BC7               	decfsz	??_main+1,f
  1025  0288  2A83               	goto	u1237
  1026  0289  29EF               	goto	l1147
  1027  028A  3181  299C         	ljmp	start
  1028  028C                     __end_of_main:
  1029                           
  1030                           	psect	intentry
  1031  0004                     __pintentry:	
  1032 ;; *************** function _ICR *****************
  1033 ;; Defined at:
  1034 ;;		line 122 in file "main.c"
  1035 ;; Parameters:    Size  Location     Type
  1036 ;;		None
  1037 ;; Auto vars:     Size  Location     Type
  1038 ;;		None
  1039 ;; Return value:  Size  Location     Type
  1040 ;;                  1    wreg      void 
  1041 ;; Registers used:
  1042 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1050 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1051 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1052 ;;Total ram usage:        4 bytes
  1053 ;; Hardware stack levels used:    1
  1054 ;; Hardware stack levels required when called:    1
  1055 ;; This function calls:
  1056 ;;		___awmod
  1057 ;;		___lwdiv
  1058 ;;		___lwmod
  1059 ;;		___wmul
  1060 ;; This function is called by:
  1061 ;;		Interrupt level 1
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065  0004                     _ICR:
  1066                           
  1067                           ;incstack = 0
  1068  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1069                           
  1070                           ; Regs used in _ICR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1071  0005  3180               	pagesel	$
  1072  0006                     i1l1195:
  1073                           
  1074                           ;main.c: 123:     if(SSPIF){
  1075  0006  0020               	movlb	0	; select bank0
  1076  0007  1D91               	btfss	17,3	;volatile
  1077  0008  280A               	goto	u101_21
  1078  0009  280B               	goto	u101_20
  1079  000A                     u101_21:
  1080  000A  28D9               	goto	i1l110
  1081  000B                     u101_20:
  1082  000B                     i1l1197:
  1083                           
  1084                           ;main.c: 124:         if((SSPSTAT & 0x04) == 0){
  1085  000B  0024               	movlb	4	; select bank4
  1086  000C  1914               	btfsc	20,2	;volatile
  1087  000D  280F               	goto	u102_21
  1088  000E  2810               	goto	u102_20
  1089  000F                     u102_21:
  1090  000F  2893               	goto	i1l1227
  1091  0010                     u102_20:
  1092  0010                     i1l1199:
  1093                           
  1094                           ;main.c: 125:             if((SSPSTAT & 0x20) == 0){
  1095  0010  1A94               	btfsc	20,5	;volatile
  1096  0011  2813               	goto	u103_21
  1097  0012  2814               	goto	u103_20
  1098  0013                     u103_21:
  1099  0013  281B               	goto	i1l1205
  1100  0014                     u103_20:
  1101  0014                     i1l1201:
  1102                           
  1103                           ;main.c: 126:                 buf = SSPBUF;
  1104  0014  0811               	movf	17,w	;volatile
  1105  0015  0020               	movlb	0	; select bank0
  1106  0016  00C2               	movwf	??_ICR
  1107  0017  0842               	movf	??_ICR,w
  1108  0018  00B5               	movwf	_buf
  1109  0019                     i1l1203:
  1110                           
  1111                           ;main.c: 127:                 recv_count = 0;
  1112  0019  01B6               	clrf	_recv_count
  1113                           
  1114                           ;main.c: 128:             }else{
  1115  001A  2890               	goto	i1l1225
  1116  001B                     i1l1205:
  1117                           
  1118                           ;main.c: 129:                 recv_data[recv_count++] = SSPBUF;
  1119  001B  0811               	movf	17,w	;volatile
  1120  001C  0020               	movlb	0	; select bank0
  1121  001D  00C2               	movwf	??_ICR
  1122  001E  0836               	movf	_recv_count,w
  1123  001F  3E29               	addlw	(low (_recv_data| 0))& (0+255)
  1124  0020  0086               	movwf	6
  1125  0021  0187               	clrf	7
  1126  0022  0842               	movf	??_ICR,w
  1127  0023  0081               	movwf	1
  1128  0024                     i1l1207:
  1129  0024  3001               	movlw	1
  1130  0025  00C2               	movwf	??_ICR
  1131  0026  0842               	movf	??_ICR,w
  1132  0027  07B6               	addwf	_recv_count,f
  1133  0028                     i1l1209:
  1134                           
  1135                           ;main.c: 130:                 recv_score = recv_data[0] + (recv_data[1] << 8);
  1136  0028  082A               	movf	_recv_data+1,w
  1137  0029  00C2               	movwf	??_ICR
  1138  002A  01C3               	clrf	??_ICR+1
  1139  002B  0842               	movf	??_ICR,w
  1140  002C  00C3               	movwf	??_ICR+1
  1141  002D  01C2               	clrf	??_ICR
  1142  002E  0829               	movf	_recv_data,w
  1143  002F  0742               	addwf	??_ICR,w
  1144  0030  00B0               	movwf	_recv_score
  1145  0031  0843               	movf	??_ICR+1,w
  1146  0032  1803               	skipnc
  1147  0033  0A43               	incf	??_ICR+1,w
  1148  0034  00B1               	movwf	_recv_score+1
  1149  0035                     i1l1211:
  1150                           
  1151                           ;main.c: 131:                 roll[0] = (recv_data[2] & 0b1000) >> 3;
  1152  0035  082B               	movf	_recv_data+2,w
  1153  0036  00C2               	movwf	??_ICR
  1154  0037  3003               	movlw	3
  1155  0038                     u104_25:
  1156  0038  36C2               	lsrf	??_ICR,f
  1157  0039  0B89               	decfsz	9,f
  1158  003A  2838               	goto	u104_25
  1159  003B  0842               	movf	??_ICR,w
  1160  003C  3901               	andlw	1
  1161  003D  00C3               	movwf	??_ICR+1
  1162  003E  0843               	movf	??_ICR+1,w
  1163  003F  00A6               	movwf	_roll
  1164  0040                     i1l1213:
  1165                           
  1166                           ;main.c: 132:                 roll[1] = (recv_data[2] & 0b100) >> 2;
  1167  0040  082B               	movf	_recv_data+2,w
  1168  0041  00C2               	movwf	??_ICR
  1169  0042  3002               	movlw	2
  1170  0043                     u105_25:
  1171  0043  36C2               	lsrf	??_ICR,f
  1172  0044  0B89               	decfsz	9,f
  1173  0045  2843               	goto	u105_25
  1174  0046  0842               	movf	??_ICR,w
  1175  0047  3901               	andlw	1
  1176  0048  00C3               	movwf	??_ICR+1
  1177  0049  0843               	movf	??_ICR+1,w
  1178  004A  00A7               	movwf	_roll+1
  1179  004B                     i1l1215:
  1180                           
  1181                           ;main.c: 133:                 roll[2] = (recv_data[2] & 0b10) >> 1;
  1182  004B  362B               	lsrf	_recv_data+2,w
  1183  004C  3901               	andlw	1
  1184  004D  00C2               	movwf	??_ICR
  1185  004E  0842               	movf	??_ICR,w
  1186  004F  00A8               	movwf	_roll+2
  1187  0050                     i1l1217:
  1188                           
  1189                           ;main.c: 134:                 disable = recv_data[2] & 0b1;
  1190  0050  082B               	movf	_recv_data+2,w
  1191  0051  3901               	andlw	1
  1192  0052  00C2               	movwf	??_ICR
  1193  0053  0842               	movf	??_ICR,w
  1194  0054  00B2               	movwf	_disable
  1195  0055                     i1l1219:
  1196                           
  1197                           ;main.c: 135:                 score_dig[0] = recv_score / 100;
  1198  0055  3064               	movlw	100
  1199  0056  00F6               	movwf	___lwdiv@divisor
  1200  0057  3000               	movlw	0
  1201  0058  00F7               	movwf	___lwdiv@divisor+1
  1202  0059  0831               	movf	_recv_score+1,w
  1203  005A  00F9               	movwf	___lwdiv@dividend+1
  1204  005B  0830               	movf	_recv_score,w
  1205  005C  00F8               	movwf	___lwdiv@dividend
  1206  005D  3182  22DF  3180   	fcall	___lwdiv
  1207  0060  0877               	movf	?___lwdiv+1,w
  1208  0061  0020               	movlb	0	; select bank0
  1209  0062  00A1               	movwf	_score_dig+1
  1210  0063  0876               	movf	?___lwdiv,w
  1211  0064  00A0               	movwf	_score_dig
  1212  0065                     i1l1221:
  1213                           
  1214                           ;main.c: 136:                 score_dig[1] = recv_score % 100 / 10;
  1215  0065  300A               	movlw	10
  1216  0066  00F6               	movwf	___lwdiv@divisor
  1217  0067  3000               	movlw	0
  1218  0068  00F7               	movwf	___lwdiv@divisor+1
  1219  0069  0831               	movf	_recv_score+1,w
  1220  006A  00F3               	movwf	___lwmod@dividend+1
  1221  006B  0830               	movf	_recv_score,w
  1222  006C  00F2               	movwf	___lwmod@dividend
  1223  006D  3064               	movlw	100
  1224  006E  00F0               	movwf	___lwmod@divisor
  1225  006F  3000               	movlw	0
  1226  0070  00F1               	movwf	___lwmod@divisor+1
  1227  0071  3183  231B  3180   	fcall	___lwmod
  1228  0074  0871               	movf	?___lwmod+1,w
  1229  0075  00F9               	movwf	___lwdiv@dividend+1
  1230  0076  0870               	movf	?___lwmod,w
  1231  0077  00F8               	movwf	___lwdiv@dividend
  1232  0078  3182  22DF  3180   	fcall	___lwdiv
  1233  007B  0877               	movf	?___lwdiv+1,w
  1234  007C  0020               	movlb	0	; select bank0
  1235  007D  00A3               	movwf	_score_dig+3
  1236  007E  0876               	movf	?___lwdiv,w
  1237  007F  00A2               	movwf	_score_dig+2
  1238  0080                     i1l1223:
  1239                           
  1240                           ;main.c: 137:                 score_dig[2] = recv_score % 10;
  1241  0080  300A               	movlw	10
  1242  0081  00F0               	movwf	___lwmod@divisor
  1243  0082  3000               	movlw	0
  1244  0083  00F1               	movwf	___lwmod@divisor+1
  1245  0084  0831               	movf	_recv_score+1,w
  1246  0085  00F3               	movwf	___lwmod@dividend+1
  1247  0086  0830               	movf	_recv_score,w
  1248  0087  00F2               	movwf	___lwmod@dividend
  1249  0088  3183  231B  3180   	fcall	___lwmod
  1250  008B  0871               	movf	?___lwmod+1,w
  1251  008C  0020               	movlb	0	; select bank0
  1252  008D  00A5               	movwf	_score_dig+5
  1253  008E  0870               	movf	?___lwmod,w
  1254  008F  00A4               	movwf	_score_dig+4
  1255  0090                     i1l1225:
  1256                           
  1257                           ;main.c: 139:             SSPCON1 |= 0x10;
  1258  0090  0024               	movlb	4	; select bank4
  1259  0091  1615               	bsf	21,4	;volatile
  1260                           
  1261                           ;main.c: 140:         }else{
  1262  0092  28D7               	goto	i1l114
  1263  0093                     i1l1227:
  1264                           
  1265                           ;main.c: 141:             static int score;;main.c: 142:             score = score_dig[0
      +                          ] * 100 + score_dig[1] * 10 + score_dig[2];
  1266  0093  3004               	movlw	4
  1267  0094  3E20               	addlw	(low (_score_dig| 0))& (0+255)
  1268  0095  0086               	movwf	6
  1269  0096  0187               	clrf	7
  1270  0097  0020               	movlb	0	; select bank0
  1271  0098  0821               	movf	_score_dig+1,w
  1272  0099  00F1               	movwf	___wmul@multiplier+1
  1273  009A  0820               	movf	_score_dig,w
  1274  009B  00F0               	movwf	___wmul@multiplier
  1275  009C  3064               	movlw	100
  1276  009D  00F2               	movwf	___wmul@multiplicand
  1277  009E  3000               	movlw	0
  1278  009F  00F3               	movwf	___wmul@multiplicand+1
  1279  00A0  3183  234F  3180   	fcall	___wmul
  1280  00A3  0870               	movf	?___wmul,w
  1281  00A4  0020               	movlb	0	; select bank0
  1282  00A5  00C2               	movwf	??_ICR
  1283  00A6  0871               	movf	?___wmul+1,w
  1284  00A7  00C3               	movwf	??_ICR+1
  1285  00A8  0823               	movf	_score_dig+3,w
  1286  00A9  00F1               	movwf	___wmul@multiplier+1
  1287  00AA  0822               	movf	_score_dig+2,w
  1288  00AB  00F0               	movwf	___wmul@multiplier
  1289  00AC  300A               	movlw	10
  1290  00AD  00F2               	movwf	___wmul@multiplicand
  1291  00AE  3000               	movlw	0
  1292  00AF  00F3               	movwf	___wmul@multiplicand+1
  1293  00B0  3183  234F  3180   	fcall	___wmul
  1294  00B3  0870               	movf	?___wmul,w
  1295  00B4  0020               	movlb	0	; select bank0
  1296  00B5  0742               	addwf	??_ICR,w
  1297  00B6  00C4               	movwf	??_ICR+2
  1298  00B7  0871               	movf	?___wmul+1,w
  1299  00B8  3D43               	addwfc	??_ICR+1,w
  1300  00B9  00C5               	movwf	??_ICR+3
  1301  00BA  3F40               	moviw [0]fsr1
  1302  00BB  0744               	addwf	??_ICR+2,w
  1303  00BC  00AE               	movwf	ICR@score
  1304  00BD  3F41               	moviw [1]fsr1
  1305  00BE  3D45               	addwfc	??_ICR+3,w
  1306  00BF  00AF               	movwf	ICR@score+1
  1307  00C0                     i1l1229:
  1308                           
  1309                           ;main.c: 143:             if((SSPSTAT & 0x01) != 0){
  1310  00C0  0024               	movlb	4	; select bank4
  1311  00C1  1C14               	btfss	20,0	;volatile
  1312  00C2  28C4               	goto	u106_21
  1313  00C3  28C5               	goto	u106_20
  1314  00C4                     u106_21:
  1315  00C4  28CE               	goto	i1l117
  1316  00C5                     u106_20:
  1317  00C5                     i1l1231:
  1318                           
  1319                           ;main.c: 144:                 buf = SSPBUF;
  1320  00C5  0811               	movf	17,w	;volatile
  1321  00C6  0020               	movlb	0	; select bank0
  1322  00C7  00C2               	movwf	??_ICR
  1323  00C8  0842               	movf	??_ICR,w
  1324  00C9  00B5               	movwf	_buf
  1325                           
  1326                           ;main.c: 145:                 SSPBUF = score & 0xFF;
  1327  00CA  082E               	movf	ICR@score,w
  1328  00CB  0024               	movlb	4	; select bank4
  1329  00CC  0091               	movwf	17	;volatile
  1330  00CD  2890               	goto	i1l1225
  1331  00CE                     i1l117:
  1332                           
  1333                           ;main.c: 148:                 if((SSPCON2 & 0x40) == 0){
  1334  00CE  1B16               	btfsc	22,6	;volatile
  1335  00CF  28D1               	goto	u107_21
  1336  00D0  28D2               	goto	u107_20
  1337  00D1                     u107_21:
  1338  00D1  28D7               	goto	i1l114
  1339  00D2                     u107_20:
  1340  00D2                     i1l1235:
  1341                           
  1342                           ;main.c: 149:                     SSPBUF = score >> 8;
  1343  00D2  0020               	movlb	0	; select bank0
  1344  00D3  082F               	movf	ICR@score+1,w
  1345  00D4  0024               	movlb	4	; select bank4
  1346  00D5  0091               	movwf	17	;volatile
  1347  00D6  2890               	goto	i1l1225
  1348  00D7                     i1l114:	
  1349                           ;main.c: 155:         }
  1350                           
  1351                           
  1352                           ;main.c: 156:         SSPIF = 0;
  1353  00D7  0020               	movlb	0	; select bank0
  1354  00D8  1191               	bcf	17,3	;volatile
  1355  00D9                     i1l110:	
  1356                           ;main.c: 157:     }
  1357                           
  1358                           
  1359                           ;main.c: 159:     if(T0IF == 1){
  1360  00D9  1D0B               	btfss	11,2	;volatile
  1361  00DA  28DC               	goto	u108_21
  1362  00DB  28DD               	goto	u108_20
  1363  00DC                     u108_21:
  1364  00DC  299A               	goto	i1l137
  1365  00DD                     u108_20:
  1366  00DD                     i1l1239:
  1367                           
  1368                           ;main.c: 160:         PORTC = 0b111;
  1369  00DD  3007               	movlw	7
  1370  00DE  008E               	movwf	14	;volatile
  1371                           
  1372                           ;main.c: 161:         _delay((unsigned long)((1)*(32000000/4000.0)));
  1373  00DF  300B               	movlw	11
  1374  00E0  0020               	movlb	0	; select bank0
  1375  00E1  00C2               	movwf	??_ICR
  1376  00E2  3062               	movlw	98
  1377  00E3                     u124_27:
  1378  00E3  0B89               	decfsz	9,f
  1379  00E4  28E3               	goto	u124_27
  1380  00E5  0BC2               	decfsz	??_ICR,f
  1381  00E6  28E3               	goto	u124_27
  1382  00E7  0000               	nop
  1383  00E8                     i1l1241:
  1384                           
  1385                           ;main.c: 162:         static char index = 1;;main.c: 163:         index = (index % 3) + 
      +                          1;
  1386  00E8  3003               	movlw	3
  1387  00E9  00F0               	movwf	___awmod@divisor
  1388  00EA  3000               	movlw	0
  1389  00EB  00F1               	movwf	___awmod@divisor+1
  1390  00EC  0020               	movlb	0	; select bank0
  1391  00ED  0841               	movf	ICR@index,w
  1392  00EE  00C2               	movwf	??_ICR
  1393  00EF  01C3               	clrf	??_ICR+1
  1394  00F0  0842               	movf	??_ICR,w
  1395  00F1  00F2               	movwf	___awmod@dividend
  1396  00F2  0843               	movf	??_ICR+1,w
  1397  00F3  00F3               	movwf	___awmod@dividend+1
  1398  00F4  3182  228C  3180   	fcall	___awmod
  1399  00F7  0870               	movf	?___awmod,w
  1400  00F8  3E01               	addlw	1
  1401  00F9  0020               	movlb	0	; select bank0
  1402  00FA  00C4               	movwf	??_ICR+2
  1403  00FB  0844               	movf	??_ICR+2,w
  1404  00FC  00C1               	movwf	ICR@index
  1405  00FD                     i1l1243:
  1406                           
  1407                           ;main.c: 165:         if(index == 1){
  1408  00FD  0341               	decf	ICR@index,w
  1409  00FE  1D03               	btfss	3,2
  1410  00FF  2901               	goto	u109_21
  1411  0100  2902               	goto	u109_20
  1412  0101                     u109_21:
  1413  0101  2926               	goto	i1l1253
  1414  0102                     u109_20:
  1415  0102                     i1l1245:
  1416                           
  1417                           ;main.c: 167:             if(roll[2]){
  1418  0102  0828               	movf	_roll+2,w
  1419  0103  1903               	btfsc	3,2
  1420  0104  2906               	goto	u110_21
  1421  0105  2907               	goto	u110_20
  1422  0106                     u110_21:
  1423  0106  2916               	goto	i1l1249
  1424  0107                     u110_20:
  1425  0107                     i1l1247:
  1426                           
  1427                           ;main.c: 168:                 PORTA = segment[roll_number] + (disable << 7);
  1428  0107  0833               	movf	_roll_number,w
  1429  0108  3E37               	addlw	(low (_segment| 0))& (0+255)
  1430  0109  0086               	movwf	6
  1431  010A  0187               	clrf	7
  1432  010B  0832               	movf	_disable,w
  1433  010C  00C2               	movwf	??_ICR
  1434  010D  3006               	movlw	6
  1435  010E                     u111_25:
  1436  010E  35C2               	lslf	??_ICR,f
  1437  010F  3EFF               	addlw	-1
  1438  0110  1D03               	skipz
  1439  0111  290E               	goto	u111_25
  1440  0112  3542               	lslf	??_ICR,w
  1441  0113  0701               	addwf	1,w
  1442  0114  008C               	movwf	12	;volatile
  1443                           
  1444                           ;main.c: 169:             }else{
  1445  0115  2924               	goto	i1l1251
  1446  0116                     i1l1249:
  1447                           
  1448                           ;main.c: 170:                 PORTA = segment[score_dig[2]] + (disable << 7);
  1449  0116  0824               	movf	_score_dig+4,w
  1450  0117  3E37               	addlw	(low (_segment| 0))& (0+255)
  1451  0118  0086               	movwf	6
  1452  0119  0187               	clrf	7
  1453  011A  0832               	movf	_disable,w
  1454  011B  00C2               	movwf	??_ICR
  1455  011C  3006               	movlw	6
  1456  011D                     u112_25:
  1457  011D  35C2               	lslf	??_ICR,f
  1458  011E  3EFF               	addlw	-1
  1459  011F  1D03               	skipz
  1460  0120  291D               	goto	u112_25
  1461  0121  3542               	lslf	??_ICR,w
  1462  0122  0701               	addwf	1,w
  1463  0123  008C               	movwf	12	;volatile
  1464  0124                     i1l1251:
  1465                           
  1466                           ;main.c: 172:             PORTC = 0b110;
  1467  0124  3006               	movlw	6
  1468  0125  008E               	movwf	14	;volatile
  1469  0126                     i1l1253:
  1470                           
  1471                           ;main.c: 174:         if(index == 2){
  1472  0126  3002               	movlw	2
  1473  0127  0641               	xorwf	ICR@index,w
  1474  0128  1D03               	btfss	3,2
  1475  0129  292B               	goto	u113_21
  1476  012A  292C               	goto	u113_20
  1477  012B                     u113_21:
  1478  012B  2950               	goto	i1l1263
  1479  012C                     u113_20:
  1480  012C                     i1l1255:
  1481                           
  1482                           ;main.c: 176:             if(roll[1]){
  1483  012C  0827               	movf	_roll+1,w
  1484  012D  1903               	btfsc	3,2
  1485  012E  2930               	goto	u114_21
  1486  012F  2931               	goto	u114_20
  1487  0130                     u114_21:
  1488  0130  2940               	goto	i1l1259
  1489  0131                     u114_20:
  1490  0131                     i1l1257:
  1491                           
  1492                           ;main.c: 177:                 PORTA = segment[roll_number] + (disable << 7);
  1493  0131  0833               	movf	_roll_number,w
  1494  0132  3E37               	addlw	(low (_segment| 0))& (0+255)
  1495  0133  0086               	movwf	6
  1496  0134  0187               	clrf	7
  1497  0135  0832               	movf	_disable,w
  1498  0136  00C2               	movwf	??_ICR
  1499  0137  3006               	movlw	6
  1500  0138                     u115_25:
  1501  0138  35C2               	lslf	??_ICR,f
  1502  0139  3EFF               	addlw	-1
  1503  013A  1D03               	skipz
  1504  013B  2938               	goto	u115_25
  1505  013C  3542               	lslf	??_ICR,w
  1506  013D  0701               	addwf	1,w
  1507  013E  008C               	movwf	12	;volatile
  1508                           
  1509                           ;main.c: 178:             }else{
  1510  013F  294E               	goto	i1l1261
  1511  0140                     i1l1259:
  1512                           
  1513                           ;main.c: 179:                 PORTA = segment[score_dig[1]] + (disable << 7);
  1514  0140  0822               	movf	_score_dig+2,w
  1515  0141  3E37               	addlw	(low (_segment| 0))& (0+255)
  1516  0142  0086               	movwf	6
  1517  0143  0187               	clrf	7
  1518  0144  0832               	movf	_disable,w
  1519  0145  00C2               	movwf	??_ICR
  1520  0146  3006               	movlw	6
  1521  0147                     u116_25:
  1522  0147  35C2               	lslf	??_ICR,f
  1523  0148  3EFF               	addlw	-1
  1524  0149  1D03               	skipz
  1525  014A  2947               	goto	u116_25
  1526  014B  3542               	lslf	??_ICR,w
  1527  014C  0701               	addwf	1,w
  1528  014D  008C               	movwf	12	;volatile
  1529  014E                     i1l1261:
  1530                           
  1531                           ;main.c: 181:             PORTC = 0b101;
  1532  014E  3005               	movlw	5
  1533  014F  008E               	movwf	14	;volatile
  1534  0150                     i1l1263:
  1535                           
  1536                           ;main.c: 183:         if(index == 3){
  1537  0150  3003               	movlw	3
  1538  0151  0641               	xorwf	ICR@index,w
  1539  0152  1D03               	btfss	3,2
  1540  0153  2955               	goto	u117_21
  1541  0154  2956               	goto	u117_20
  1542  0155                     u117_21:
  1543  0155  297A               	goto	i1l1273
  1544  0156                     u117_20:
  1545  0156                     i1l1265:
  1546                           
  1547                           ;main.c: 185:             if(roll[0]){
  1548  0156  0826               	movf	_roll,w
  1549  0157  1903               	btfsc	3,2
  1550  0158  295A               	goto	u118_21
  1551  0159  295B               	goto	u118_20
  1552  015A                     u118_21:
  1553  015A  296A               	goto	i1l1269
  1554  015B                     u118_20:
  1555  015B                     i1l1267:
  1556                           
  1557                           ;main.c: 186:                 PORTA = segment[roll_number] + (disable << 7);
  1558  015B  0833               	movf	_roll_number,w
  1559  015C  3E37               	addlw	(low (_segment| 0))& (0+255)
  1560  015D  0086               	movwf	6
  1561  015E  0187               	clrf	7
  1562  015F  0832               	movf	_disable,w
  1563  0160  00C2               	movwf	??_ICR
  1564  0161  3006               	movlw	6
  1565  0162                     u119_25:
  1566  0162  35C2               	lslf	??_ICR,f
  1567  0163  3EFF               	addlw	-1
  1568  0164  1D03               	skipz
  1569  0165  2962               	goto	u119_25
  1570  0166  3542               	lslf	??_ICR,w
  1571  0167  0701               	addwf	1,w
  1572  0168  008C               	movwf	12	;volatile
  1573                           
  1574                           ;main.c: 187:             }else{
  1575  0169  2978               	goto	i1l1271
  1576  016A                     i1l1269:
  1577                           
  1578                           ;main.c: 188:                 PORTA = segment[score_dig[0]] + (disable << 7);
  1579  016A  0820               	movf	_score_dig,w
  1580  016B  3E37               	addlw	(low (_segment| 0))& (0+255)
  1581  016C  0086               	movwf	6
  1582  016D  0187               	clrf	7
  1583  016E  0832               	movf	_disable,w
  1584  016F  00C2               	movwf	??_ICR
  1585  0170  3006               	movlw	6
  1586  0171                     u120_25:
  1587  0171  35C2               	lslf	??_ICR,f
  1588  0172  3EFF               	addlw	-1
  1589  0173  1D03               	skipz
  1590  0174  2971               	goto	u120_25
  1591  0175  3542               	lslf	??_ICR,w
  1592  0176  0701               	addwf	1,w
  1593  0177  008C               	movwf	12	;volatile
  1594  0178                     i1l1271:
  1595                           
  1596                           ;main.c: 190:             PORTC = 0b011;
  1597  0178  3003               	movlw	3
  1598  0179  008E               	movwf	14	;volatile
  1599  017A                     i1l1273:
  1600                           
  1601                           ;main.c: 192:         static int count = 0;;main.c: 193:         count++;
  1602  017A  3001               	movlw	1
  1603  017B  07AC               	addwf	ICR@count,f
  1604  017C  3000               	movlw	0
  1605  017D  3DAD               	addwfc	ICR@count+1,f
  1606  017E                     i1l1275:
  1607                           
  1608                           ;main.c: 194:         if(count > 100){
  1609  017E  082D               	movf	ICR@count+1,w
  1610  017F  3A80               	xorlw	128
  1611  0180  00C2               	movwf	??_ICR
  1612  0181  3080               	movlw	128
  1613  0182  0242               	subwf	??_ICR,w
  1614  0183  1D03               	skipz
  1615  0184  2987               	goto	u121_25
  1616  0185  3065               	movlw	101
  1617  0186  022C               	subwf	ICR@count,w
  1618  0187                     u121_25:
  1619  0187  1C03               	skipc
  1620  0188  298A               	goto	u121_21
  1621  0189  298B               	goto	u121_20
  1622  018A                     u121_21:
  1623  018A  2999               	goto	i1l1283
  1624  018B                     u121_20:
  1625  018B                     i1l1277:
  1626                           
  1627                           ;main.c: 195:             roll_number++;
  1628  018B  3001               	movlw	1
  1629  018C  0020               	movlb	0	; select bank0
  1630  018D  00C2               	movwf	??_ICR
  1631  018E  0842               	movf	??_ICR,w
  1632  018F  07B3               	addwf	_roll_number,f
  1633  0190                     i1l1279:
  1634                           
  1635                           ;main.c: 196:             if(roll_number > 9) roll_number = 0;
  1636  0190  300A               	movlw	10
  1637  0191  0233               	subwf	_roll_number,w
  1638  0192  1C03               	skipc
  1639  0193  2995               	goto	u122_21
  1640  0194  2996               	goto	u122_20
  1641  0195                     u122_21:
  1642  0195  2997               	goto	i1l136
  1643  0196                     u122_20:
  1644  0196                     i1l1281:
  1645  0196  01B3               	clrf	_roll_number
  1646  0197                     i1l136:
  1647                           
  1648                           ;main.c: 197:             count = 0;
  1649  0197  01AC               	clrf	ICR@count
  1650  0198  01AD               	clrf	ICR@count+1
  1651  0199                     i1l1283:
  1652                           
  1653                           ;main.c: 199:         T0IF = 0;
  1654  0199  110B               	bcf	11,2	;volatile
  1655  019A                     i1l137:
  1656  019A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1657  019B  0009               	retfie
  1658  019C                     __end_of_ICR:
  1659                           
  1660                           	psect	text2
  1661  034F                     __ptext2:	
  1662 ;; *************** function ___wmul *****************
  1663 ;; Defined at:
  1664 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;  multiplier      2    0[COMMON] unsigned int 
  1667 ;;  multiplicand    2    2[COMMON] unsigned int 
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;  product         2    4[COMMON] unsigned int 
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  2    0[COMMON] unsigned int 
  1672 ;; Registers used:
  1673 ;;		wreg, status,2, status,0
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1679 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1680 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1682 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1683 ;;Total ram usage:        6 bytes
  1684 ;; Hardware stack levels used:    1
  1685 ;; This function calls:
  1686 ;;		Nothing
  1687 ;; This function is called by:
  1688 ;;		_ICR
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           
  1692                           
  1693                           ;psect for function ___wmul
  1694  034F                     ___wmul:
  1695  034F                     i1l1015:	
  1696                           ;incstack = 0
  1697                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1698                           
  1699  034F  01F4               	clrf	___wmul@product
  1700  0350  01F5               	clrf	___wmul@product+1
  1701  0351                     i1l1017:
  1702  0351  1C70               	btfss	___wmul@multiplier,0
  1703  0352  2B54               	goto	u62_21
  1704  0353  2B55               	goto	u62_20
  1705  0354                     u62_21:
  1706  0354  2B59               	goto	i1l287
  1707  0355                     u62_20:
  1708  0355                     i1l1019:
  1709  0355  0872               	movf	___wmul@multiplicand,w
  1710  0356  07F4               	addwf	___wmul@product,f
  1711  0357  0873               	movf	___wmul@multiplicand+1,w
  1712  0358  3DF5               	addwfc	___wmul@product+1,f
  1713  0359                     i1l287:
  1714  0359  3001               	movlw	1
  1715  035A                     u63_25:
  1716  035A  35F2               	lslf	___wmul@multiplicand,f
  1717  035B  0DF3               	rlf	___wmul@multiplicand+1,f
  1718  035C  0B89               	decfsz	9,f
  1719  035D  2B5A               	goto	u63_25
  1720  035E                     i1l1021:
  1721  035E  3001               	movlw	1
  1722  035F                     u64_25:
  1723  035F  36F1               	lsrf	___wmul@multiplier+1,f
  1724  0360  0CF0               	rrf	___wmul@multiplier,f
  1725  0361  0B89               	decfsz	9,f
  1726  0362  2B5F               	goto	u64_25
  1727  0363                     i1l1023:
  1728  0363  0870               	movf	___wmul@multiplier,w
  1729  0364  0471               	iorwf	___wmul@multiplier+1,w
  1730  0365  1D03               	btfss	3,2
  1731  0366  2B68               	goto	u65_21
  1732  0367  2B69               	goto	u65_20
  1733  0368                     u65_21:
  1734  0368  2B51               	goto	i1l1017
  1735  0369                     u65_20:
  1736  0369                     i1l1025:
  1737  0369  0875               	movf	___wmul@product+1,w
  1738  036A  00F1               	movwf	?___wmul+1
  1739  036B  0874               	movf	___wmul@product,w
  1740  036C  00F0               	movwf	?___wmul
  1741  036D                     i1l289:
  1742  036D  0008               	return
  1743  036E                     __end_of___wmul:
  1744                           
  1745                           	psect	text3
  1746  031B                     __ptext3:	
  1747 ;; *************** function ___lwmod *****************
  1748 ;; Defined at:
  1749 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lwmod.c"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;  divisor         2    0[COMMON] unsigned int 
  1752 ;;  dividend        2    2[COMMON] unsigned int 
  1753 ;; Auto vars:     Size  Location     Type
  1754 ;;  counter         1    5[COMMON] unsigned char 
  1755 ;; Return value:  Size  Location     Type
  1756 ;;                  2    0[COMMON] unsigned int 
  1757 ;; Registers used:
  1758 ;;		wreg, status,2, status,0
  1759 ;; Tracked objects:
  1760 ;;		On entry : 0/0
  1761 ;;		On exit  : 0/0
  1762 ;;		Unchanged: 0/0
  1763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1764 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1765 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1766 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1767 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1768 ;;Total ram usage:        6 bytes
  1769 ;; Hardware stack levels used:    1
  1770 ;; This function calls:
  1771 ;;		Nothing
  1772 ;; This function is called by:
  1773 ;;		_ICR
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777                           
  1778                           ;psect for function ___lwmod
  1779  031B                     ___lwmod:
  1780  031B                     i1l1093:	
  1781                           ;incstack = 0
  1782                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1783                           
  1784  031B  0870               	movf	___lwmod@divisor,w
  1785  031C  0471               	iorwf	___lwmod@divisor+1,w
  1786  031D  1903               	btfsc	3,2
  1787  031E  2B20               	goto	u82_21
  1788  031F  2B21               	goto	u82_20
  1789  0320                     u82_21:
  1790  0320  2B4A               	goto	i1l1111
  1791  0321                     u82_20:
  1792  0321                     i1l1095:
  1793  0321  01F5               	clrf	___lwmod@counter
  1794  0322  0AF5               	incf	___lwmod@counter,f
  1795  0323  2B2D               	goto	i1l1101
  1796  0324                     i1l1097:
  1797  0324  3001               	movlw	1
  1798  0325                     u83_25:
  1799  0325  35F0               	lslf	___lwmod@divisor,f
  1800  0326  0DF1               	rlf	___lwmod@divisor+1,f
  1801  0327  0B89               	decfsz	9,f
  1802  0328  2B25               	goto	u83_25
  1803  0329                     i1l1099:
  1804  0329  3001               	movlw	1
  1805  032A  00F4               	movwf	??___lwmod
  1806  032B  0874               	movf	??___lwmod,w
  1807  032C  07F5               	addwf	___lwmod@counter,f
  1808  032D                     i1l1101:
  1809  032D  1FF1               	btfss	___lwmod@divisor+1,7
  1810  032E  2B30               	goto	u84_21
  1811  032F  2B31               	goto	u84_20
  1812  0330                     u84_21:
  1813  0330  2B24               	goto	i1l1097
  1814  0331                     u84_20:
  1815  0331                     i1l1103:
  1816  0331  0871               	movf	___lwmod@divisor+1,w
  1817  0332  0273               	subwf	___lwmod@dividend+1,w
  1818  0333  1D03               	skipz
  1819  0334  2B37               	goto	u85_25
  1820  0335  0870               	movf	___lwmod@divisor,w
  1821  0336  0272               	subwf	___lwmod@dividend,w
  1822  0337                     u85_25:
  1823  0337  1C03               	skipc
  1824  0338  2B3A               	goto	u85_21
  1825  0339  2B3B               	goto	u85_20
  1826  033A                     u85_21:
  1827  033A  2B3F               	goto	i1l1107
  1828  033B                     u85_20:
  1829  033B                     i1l1105:
  1830  033B  0870               	movf	___lwmod@divisor,w
  1831  033C  02F2               	subwf	___lwmod@dividend,f
  1832  033D  0871               	movf	___lwmod@divisor+1,w
  1833  033E  3BF3               	subwfb	___lwmod@dividend+1,f
  1834  033F                     i1l1107:
  1835  033F  3001               	movlw	1
  1836  0340                     u86_25:
  1837  0340  36F1               	lsrf	___lwmod@divisor+1,f
  1838  0341  0CF0               	rrf	___lwmod@divisor,f
  1839  0342  0B89               	decfsz	9,f
  1840  0343  2B40               	goto	u86_25
  1841  0344                     i1l1109:
  1842  0344  3001               	movlw	1
  1843  0345  02F5               	subwf	___lwmod@counter,f
  1844  0346  1D03               	btfss	3,2
  1845  0347  2B49               	goto	u87_21
  1846  0348  2B4A               	goto	u87_20
  1847  0349                     u87_21:
  1848  0349  2B31               	goto	i1l1103
  1849  034A                     u87_20:
  1850  034A                     i1l1111:
  1851  034A  0873               	movf	___lwmod@dividend+1,w
  1852  034B  00F1               	movwf	?___lwmod+1
  1853  034C  0872               	movf	___lwmod@dividend,w
  1854  034D  00F0               	movwf	?___lwmod
  1855  034E                     i1l577:
  1856  034E  0008               	return
  1857  034F                     __end_of___lwmod:
  1858                           
  1859                           	psect	text4
  1860  02DF                     __ptext4:	
  1861 ;; *************** function ___lwdiv *****************
  1862 ;; Defined at:
  1863 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lwdiv.c"
  1864 ;; Parameters:    Size  Location     Type
  1865 ;;  divisor         2    6[COMMON] unsigned int 
  1866 ;;  dividend        2    8[COMMON] unsigned int 
  1867 ;; Auto vars:     Size  Location     Type
  1868 ;;  quotient        2   11[COMMON] unsigned int 
  1869 ;;  counter         1   13[COMMON] unsigned char 
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  2    6[COMMON] unsigned int 
  1872 ;; Registers used:
  1873 ;;		wreg, status,2, status,0
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1879 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1880 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1881 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1882 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1883 ;;Total ram usage:        8 bytes
  1884 ;; Hardware stack levels used:    1
  1885 ;; This function calls:
  1886 ;;		Nothing
  1887 ;; This function is called by:
  1888 ;;		_ICR
  1889 ;; This function uses a non-reentrant model
  1890 ;;
  1891                           
  1892                           
  1893                           ;psect for function ___lwdiv
  1894  02DF                     ___lwdiv:
  1895  02DF                     i1l1067:	
  1896                           ;incstack = 0
  1897                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1898                           
  1899  02DF  01FB               	clrf	___lwdiv@quotient
  1900  02E0  01FC               	clrf	___lwdiv@quotient+1
  1901  02E1                     i1l1069:
  1902  02E1  0876               	movf	___lwdiv@divisor,w
  1903  02E2  0477               	iorwf	___lwdiv@divisor+1,w
  1904  02E3  1903               	btfsc	3,2
  1905  02E4  2AE6               	goto	u75_21
  1906  02E5  2AE7               	goto	u75_20
  1907  02E6                     u75_21:
  1908  02E6  2B16               	goto	i1l1089
  1909  02E7                     u75_20:
  1910  02E7                     i1l1071:
  1911  02E7  01FD               	clrf	___lwdiv@counter
  1912  02E8  0AFD               	incf	___lwdiv@counter,f
  1913  02E9  2AF3               	goto	i1l1077
  1914  02EA                     i1l1073:
  1915  02EA  3001               	movlw	1
  1916  02EB                     u76_25:
  1917  02EB  35F6               	lslf	___lwdiv@divisor,f
  1918  02EC  0DF7               	rlf	___lwdiv@divisor+1,f
  1919  02ED  0B89               	decfsz	9,f
  1920  02EE  2AEB               	goto	u76_25
  1921  02EF                     i1l1075:
  1922  02EF  3001               	movlw	1
  1923  02F0  00FA               	movwf	??___lwdiv
  1924  02F1  087A               	movf	??___lwdiv,w
  1925  02F2  07FD               	addwf	___lwdiv@counter,f
  1926  02F3                     i1l1077:
  1927  02F3  1FF7               	btfss	___lwdiv@divisor+1,7
  1928  02F4  2AF6               	goto	u77_21
  1929  02F5  2AF7               	goto	u77_20
  1930  02F6                     u77_21:
  1931  02F6  2AEA               	goto	i1l1073
  1932  02F7                     u77_20:
  1933  02F7                     i1l1079:
  1934  02F7  3001               	movlw	1
  1935  02F8                     u78_25:
  1936  02F8  35FB               	lslf	___lwdiv@quotient,f
  1937  02F9  0DFC               	rlf	___lwdiv@quotient+1,f
  1938  02FA  0B89               	decfsz	9,f
  1939  02FB  2AF8               	goto	u78_25
  1940  02FC  0877               	movf	___lwdiv@divisor+1,w
  1941  02FD  0279               	subwf	___lwdiv@dividend+1,w
  1942  02FE  1D03               	skipz
  1943  02FF  2B02               	goto	u79_25
  1944  0300  0876               	movf	___lwdiv@divisor,w
  1945  0301  0278               	subwf	___lwdiv@dividend,w
  1946  0302                     u79_25:
  1947  0302  1C03               	skipc
  1948  0303  2B05               	goto	u79_21
  1949  0304  2B06               	goto	u79_20
  1950  0305                     u79_21:
  1951  0305  2B0B               	goto	i1l1085
  1952  0306                     u79_20:
  1953  0306                     i1l1081:
  1954  0306  0876               	movf	___lwdiv@divisor,w
  1955  0307  02F8               	subwf	___lwdiv@dividend,f
  1956  0308  0877               	movf	___lwdiv@divisor+1,w
  1957  0309  3BF9               	subwfb	___lwdiv@dividend+1,f
  1958  030A                     i1l1083:
  1959  030A  147B               	bsf	___lwdiv@quotient,0
  1960  030B                     i1l1085:
  1961  030B  3001               	movlw	1
  1962  030C                     u80_25:
  1963  030C  36F7               	lsrf	___lwdiv@divisor+1,f
  1964  030D  0CF6               	rrf	___lwdiv@divisor,f
  1965  030E  0B89               	decfsz	9,f
  1966  030F  2B0C               	goto	u80_25
  1967  0310                     i1l1087:
  1968  0310  3001               	movlw	1
  1969  0311  02FD               	subwf	___lwdiv@counter,f
  1970  0312  1D03               	btfss	3,2
  1971  0313  2B15               	goto	u81_21
  1972  0314  2B16               	goto	u81_20
  1973  0315                     u81_21:
  1974  0315  2AF7               	goto	i1l1079
  1975  0316                     u81_20:
  1976  0316                     i1l1089:
  1977  0316  087C               	movf	___lwdiv@quotient+1,w
  1978  0317  00F7               	movwf	?___lwdiv+1
  1979  0318  087B               	movf	___lwdiv@quotient,w
  1980  0319  00F6               	movwf	?___lwdiv
  1981  031A                     i1l567:
  1982  031A  0008               	return
  1983  031B                     __end_of___lwdiv:
  1984                           
  1985                           	psect	text5
  1986  028C                     __ptext5:	
  1987 ;; *************** function ___awmod *****************
  1988 ;; Defined at:
  1989 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;  divisor         2    0[COMMON] int 
  1992 ;;  dividend        2    2[COMMON] int 
  1993 ;; Auto vars:     Size  Location     Type
  1994 ;;  sign            1    6[COMMON] unsigned char 
  1995 ;;  counter         1    5[COMMON] unsigned char 
  1996 ;; Return value:  Size  Location     Type
  1997 ;;                  2    0[COMMON] int 
  1998 ;; Registers used:
  1999 ;;		wreg, status,2, status,0
  2000 ;; Tracked objects:
  2001 ;;		On entry : 0/0
  2002 ;;		On exit  : 0/0
  2003 ;;		Unchanged: 0/0
  2004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2005 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2006 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2007 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2008 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2009 ;;Total ram usage:        7 bytes
  2010 ;; Hardware stack levels used:    1
  2011 ;; This function calls:
  2012 ;;		Nothing
  2013 ;; This function is called by:
  2014 ;;		_ICR
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017                           
  2018                           
  2019                           ;psect for function ___awmod
  2020  028C                     ___awmod:
  2021  028C                     i1l1029:	
  2022                           ;incstack = 0
  2023                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2024                           
  2025  028C  01F6               	clrf	___awmod@sign
  2026  028D                     i1l1031:
  2027  028D  1FF3               	btfss	___awmod@dividend+1,7
  2028  028E  2A90               	goto	u66_21
  2029  028F  2A91               	goto	u66_20
  2030  0290                     u66_21:
  2031  0290  2A98               	goto	i1l1037
  2032  0291                     u66_20:
  2033  0291                     i1l1033:
  2034  0291  09F2               	comf	___awmod@dividend,f
  2035  0292  09F3               	comf	___awmod@dividend+1,f
  2036  0293  0AF2               	incf	___awmod@dividend,f
  2037  0294  1903               	skipnz
  2038  0295  0AF3               	incf	___awmod@dividend+1,f
  2039  0296                     i1l1035:
  2040  0296  01F6               	clrf	___awmod@sign
  2041  0297  0AF6               	incf	___awmod@sign,f
  2042  0298                     i1l1037:
  2043  0298  1FF1               	btfss	___awmod@divisor+1,7
  2044  0299  2A9B               	goto	u67_21
  2045  029A  2A9C               	goto	u67_20
  2046  029B                     u67_21:
  2047  029B  2AA1               	goto	i1l1041
  2048  029C                     u67_20:
  2049  029C                     i1l1039:
  2050  029C  09F0               	comf	___awmod@divisor,f
  2051  029D  09F1               	comf	___awmod@divisor+1,f
  2052  029E  0AF0               	incf	___awmod@divisor,f
  2053  029F  1903               	skipnz
  2054  02A0  0AF1               	incf	___awmod@divisor+1,f
  2055  02A1                     i1l1041:
  2056  02A1  0870               	movf	___awmod@divisor,w
  2057  02A2  0471               	iorwf	___awmod@divisor+1,w
  2058  02A3  1903               	btfsc	3,2
  2059  02A4  2AA6               	goto	u68_21
  2060  02A5  2AA7               	goto	u68_20
  2061  02A6                     u68_21:
  2062  02A6  2AD0               	goto	i1l1059
  2063  02A7                     u68_20:
  2064  02A7                     i1l1043:
  2065  02A7  01F5               	clrf	___awmod@counter
  2066  02A8  0AF5               	incf	___awmod@counter,f
  2067  02A9  2AB3               	goto	i1l1049
  2068  02AA                     i1l1045:
  2069  02AA  3001               	movlw	1
  2070  02AB                     u69_25:
  2071  02AB  35F0               	lslf	___awmod@divisor,f
  2072  02AC  0DF1               	rlf	___awmod@divisor+1,f
  2073  02AD  0B89               	decfsz	9,f
  2074  02AE  2AAB               	goto	u69_25
  2075  02AF                     i1l1047:
  2076  02AF  3001               	movlw	1
  2077  02B0  00F4               	movwf	??___awmod
  2078  02B1  0874               	movf	??___awmod,w
  2079  02B2  07F5               	addwf	___awmod@counter,f
  2080  02B3                     i1l1049:
  2081  02B3  1FF1               	btfss	___awmod@divisor+1,7
  2082  02B4  2AB6               	goto	u70_21
  2083  02B5  2AB7               	goto	u70_20
  2084  02B6                     u70_21:
  2085  02B6  2AAA               	goto	i1l1045
  2086  02B7                     u70_20:
  2087  02B7                     i1l1051:
  2088  02B7  0871               	movf	___awmod@divisor+1,w
  2089  02B8  0273               	subwf	___awmod@dividend+1,w
  2090  02B9  1D03               	skipz
  2091  02BA  2ABD               	goto	u71_25
  2092  02BB  0870               	movf	___awmod@divisor,w
  2093  02BC  0272               	subwf	___awmod@dividend,w
  2094  02BD                     u71_25:
  2095  02BD  1C03               	skipc
  2096  02BE  2AC0               	goto	u71_21
  2097  02BF  2AC1               	goto	u71_20
  2098  02C0                     u71_21:
  2099  02C0  2AC5               	goto	i1l1055
  2100  02C1                     u71_20:
  2101  02C1                     i1l1053:
  2102  02C1  0870               	movf	___awmod@divisor,w
  2103  02C2  02F2               	subwf	___awmod@dividend,f
  2104  02C3  0871               	movf	___awmod@divisor+1,w
  2105  02C4  3BF3               	subwfb	___awmod@dividend+1,f
  2106  02C5                     i1l1055:
  2107  02C5  3001               	movlw	1
  2108  02C6                     u72_25:
  2109  02C6  36F1               	lsrf	___awmod@divisor+1,f
  2110  02C7  0CF0               	rrf	___awmod@divisor,f
  2111  02C8  0B89               	decfsz	9,f
  2112  02C9  2AC6               	goto	u72_25
  2113  02CA                     i1l1057:
  2114  02CA  3001               	movlw	1
  2115  02CB  02F5               	subwf	___awmod@counter,f
  2116  02CC  1D03               	btfss	3,2
  2117  02CD  2ACF               	goto	u73_21
  2118  02CE  2AD0               	goto	u73_20
  2119  02CF                     u73_21:
  2120  02CF  2AB7               	goto	i1l1051
  2121  02D0                     u73_20:
  2122  02D0                     i1l1059:
  2123  02D0  0876               	movf	___awmod@sign,w
  2124  02D1  1903               	btfsc	3,2
  2125  02D2  2AD4               	goto	u74_21
  2126  02D3  2AD5               	goto	u74_20
  2127  02D4                     u74_21:
  2128  02D4  2ADA               	goto	i1l1063
  2129  02D5                     u74_20:
  2130  02D5                     i1l1061:
  2131  02D5  09F2               	comf	___awmod@dividend,f
  2132  02D6  09F3               	comf	___awmod@dividend+1,f
  2133  02D7  0AF2               	incf	___awmod@dividend,f
  2134  02D8  1903               	skipnz
  2135  02D9  0AF3               	incf	___awmod@dividend+1,f
  2136  02DA                     i1l1063:
  2137  02DA  0873               	movf	___awmod@dividend+1,w
  2138  02DB  00F1               	movwf	?___awmod+1
  2139  02DC  0872               	movf	___awmod@dividend,w
  2140  02DD  00F0               	movwf	?___awmod
  2141  02DE                     i1l453:
  2142  02DE  0008               	return
  2143  02DF                     __end_of___awmod:
  2144  007E                     btemp	set	126	;btemp
  2145  007E                     int$flags	set	126
  2146  007E                     wtemp0	set	126
  2147                           
  2148                           	psect	config
  2149                           
  2150                           ;Config register CONFIG1 @ 0x8007
  2151                           ;	Oscillator Selection
  2152                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2153                           ;	Watchdog Timer Enable
  2154                           ;	WDTE = OFF, WDT disabled
  2155                           ;	Power-up Timer Enable
  2156                           ;	PWRTE = OFF, PWRT disabled
  2157                           ;	MCLR Pin Function Select
  2158                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2159                           ;	Flash Program Memory Code Protection
  2160                           ;	CP = OFF, Program memory code protection is disabled
  2161                           ;	Data Memory Code Protection
  2162                           ;	CPD = OFF, Data memory code protection is disabled
  2163                           ;	Brown-out Reset Enable
  2164                           ;	BOREN = OFF, Brown-out Reset disabled
  2165                           ;	Clock Out Enable
  2166                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2167                           ;	Internal/External Switchover
  2168                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2169                           ;	Fail-Safe Clock Monitor Enable
  2170                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2171  8007                     	org	32775
  2172  8007  39E4               	dw	14820
  2173                           
  2174                           ;Config register CONFIG2 @ 0x8008
  2175                           ;	Flash Memory Self-Write Protection
  2176                           ;	WRT = OFF, Write protection off
  2177                           ;	Voltage Regulator Capacitor Enable
  2178                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  2179                           ;	PLL Enable
  2180                           ;	PLLEN = ON, 4x PLL enabled
  2181                           ;	Stack Overflow/Underflow Reset Enable
  2182                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2183                           ;	Brown-out Reset Voltage Selection
  2184                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2185                           ;	Low-Voltage Programming Enable
  2186                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2187  8008                     	org	32776
  2188  8008  1FFF               	dw	8191

Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         23
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      7      41
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ICR in COMMON

    _ICR->___lwdiv
    ___lwdiv->___lwmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _ICR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ICR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ICR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ICR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ICR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ICR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ICR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ICR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ICR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ICR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ICR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ICR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ICR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      23
                                              4 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ICR                                                  4     4      0    1773
                                              0 BANK0      4     4      0
                            ___awmod
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     463
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ICR (ROOT)
   ___awmod
   ___lwdiv
     ___lwmod (ARG)
   ___lwmod
   ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      7      29       5       51.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      37      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      37      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Feb 01 21:21:22 2021

                     l97 0234                       l99 0252      ___wmul@multiplicand 0072  
                    l101 026C                      _GIE 005F                      _RB0 0068  
                    _ICR 0004                      _RB1 0069                      _RB2 006A  
                    _RB3 006B                      _RB4 006C                      _RB5 006D  
                    _RC5 0075                      _RC6 0076                      u900 0203  
                    u901 0202                      u910 020B                      u911 020A  
                    u920 0213                      u921 0212                      u930 021B  
                    u931 021A                      u940 0223                      u941 0222  
                    u950 0230                      u951 022F                      u960 0241  
                    u880 01F6                      u961 0240                      u881 01F5  
                    u970 024D                      u890 01FB                      u971 024C  
                    u891 01FA                      u980 0260                      u981 025F  
                    u965 023D                      u990 0268                      u991 0267  
                    u985 025C                      _buf 0035             ___awmod@sign 0076  
                    wreg 0009              main@address 0048                     ?_ICR 0070  
                   l1121 01BC                     l1131 01E5                     l1123 01CF  
                   l1115 01B6                     l1141 01EB                     l1133 01E6  
                   l1125 01D9                     l1117 01B9                     l1151 01FB  
                   l1143 01EC                     l1135 01E7                     l1127 01DD  
                   l1119 01BA                     l1161 020F                     l1153 01FF  
                   l1145 01EE                     l1137 01E9                     l1129 01E4  
                   l1171 0223                     l1163 0213                     l1155 0203  
                   l1147 01EF                     l1139 01EA                     l1181 024D  
                   l1173 0227                     l1165 0217                     l1157 0207  
                   l1149 01F6                     l1191 027C                     l1183 0260  
                   l1175 0230                     l1167 021B                     l1159 020B  
                   l1193 027D                     l1185 0263                     l1177 0241  
                   l1169 021F                     l1187 0268                     l1179 0244  
                   l1189 0279                     _T0IE 005D                     u1000 0279  
                   _T0IF 005A                     u1001 0278                     u1005 0275  
                   u1237 0283                     _TMR0 0015                     _WPUB 020D  
                   _main 01B6                     _send 0034                     _roll 0026  
                   fsr0h 0005                     fsr1h 0007                     indf0 0000  
                   fsr0l 0004                     indf1 0001                     fsr1l 0006  
                   btemp 007E                     start 019C                    ??_ICR 0042  
                  ?_main 0070          __end_of___awmod 02DF          __end_of___lwdiv 031B  
                  i1l110 00D9                    i1l114 00D7                    i1l117 00CE  
                  i1l136 0197                    i1l137 019A          __end_of___lwmod 034F  
                  i1l453 02DE                    i1l287 0359                    i1l289 036D  
                  i1l567 031A                    i1l577 034E                    _PORTA 000C  
                  _PORTB 000D                    _PORTC 000E                    u70_20 02B7  
                  u62_20 0355                    u70_21 02B6                    u62_21 0354  
                  u71_20 02C1                    u71_21 02C0                    u71_25 02BD  
                  u63_25 035A                    u72_25 02C6                    u80_25 030C  
                  u64_25 035F                    u73_20 02D0                    u81_20 0316  
                  u65_20 0369                    u73_21 02CF                    u81_21 0315  
                  u65_21 0368                    _TRISA 008C                    _TRISB 008D  
                  _TRISC 008E                    _SSPIE 048B                    u74_20 02D5  
                  u66_20 0291                    u82_20 0321                    _SSPIF 008B  
                  u74_21 02D4                    u66_21 0290                    u82_21 0320  
                  u67_20 029C                    u75_20 02E7                    u67_21 029B  
                  u75_21 02E6                    u83_25 0325                    u68_20 02A7  
                  u84_20 0331                    u68_21 02A6                    u84_21 0330  
                  u76_25 02EB                    u77_20 02F7                    u85_20 033B  
                  u77_21 02F6                    u85_21 033A                    u69_25 02AB  
                  u85_25 0337                    u78_25 02F8                    u86_25 0340  
                  u79_20 0306                    u87_20 034A                    u79_21 0305  
                  u87_21 0349                    u79_25 0302                    status 0003  
                  wtemp0 007E          __initialization 019E             __end_of_main 028C  
                 ??_main 0046                   _ANSELA 018C                   _ANSELB 018D  
                 u101_20 000B                   u101_21 000A                   i1l1101 032D  
                 i1l1021 035E                   i1l1031 028D                   i1l1103 0331  
                 i1l1111 034A                   i1l1023 0363                   i1l1015 034F  
                 u110_20 0107                   u102_20 0010                   i1l1041 02A1  
                 i1l1033 0291                   i1l1105 033B                   i1l1025 0369  
                 i1l1017 0351                   u110_21 0106                   i1l1201 0014  
                 u102_21 000F                   i1l1051 02B7                   i1l1043 02A7  
                 i1l1035 0296                   i1l1107 033F                   i1l1019 0355  
                 i1l1211 0035                   i1l1203 0019                   i1l1061 02D5  
                 i1l1053 02C1                   i1l1045 02AA                   i1l1037 0298  
                 i1l1029 028C                   i1l1109 0344                   i1l1221 0065  
                 i1l1213 0040                   i1l1205 001B                   i1l1063 02DA  
                 i1l1055 02C5                   i1l1047 02AF                   i1l1039 029C  
                 i1l1071 02E7                   i1l1231 00C5                   i1l1223 0080  
                 i1l1215 004B                   i1l1207 0024                   u103_20 0014  
                 i1l1057 02CA                   i1l1049 02B3                   i1l1081 0306  
                 i1l1073 02EA                   i1l1241 00E8                   i1l1217 0050  
                 i1l1209 0028                   i1l1225 0090                   u103_21 0013  
                 i1l1059 02D0                   i1l1083 030A                   i1l1075 02EF  
                 i1l1067 02DF                   i1l1251 0124                   i1l1243 00FD  
                 i1l1235 00D2                   i1l1219 0055                   i1l1227 0093  
                 i1l1085 030B                   i1l1077 02F3                   i1l1069 02E1  
                 i1l1093 031B                   i1l1261 014E                   u111_25 010E  
                 i1l1245 0102                   i1l1253 0126                   i1l1229 00C0  
                 i1l1087 0310                   i1l1079 02F7                   i1l1095 0321  
                 i1l1271 0178                   i1l1255 012C                   i1l1263 0150  
                 i1l1247 0107                   i1l1239 00DD                   i1l1089 0316  
                 i1l1097 0324                   i1l1281 0196                   i1l1265 0156  
                 i1l1273 017A                   i1l1257 0131                   i1l1249 0116  
                 i1l1099 0329                   i1l1283 0199                   i1l1275 017E  
                 i1l1267 015B                   i1l1259 0140                   i1l1195 0006  
                 i1l1277 018B                   u120_25 0171                   i1l1269 016A  
                 u112_25 011D                   u104_25 0038                   i1l1197 000B  
                 i1l1279 0190                   i1l1199 0010                   u121_20 018B  
                 u113_20 012C                   u121_21 018A                   u113_21 012B  
                 u121_25 0187                   u105_25 0043                   u122_20 0196  
                 u114_20 0131                   u106_20 00C5                   u122_21 0195  
                 u114_21 0130                   u106_21 00C4                   u107_20 00D2  
                 u107_21 00D1                   u115_25 0138                   u108_20 00DD  
                 u108_21 00DC                   u116_25 0147                   u124_27 00E3  
                 u117_20 0156                   u109_20 0102                   u117_21 0155  
                 u109_21 0101                   u118_20 015B                   u118_21 015A  
                 u119_25 0162                   _OSCCON 0099                   _SSPADD 0212  
                 _SSPBUF 0211                   _SSPMSK 0213                   ___wmul 034F  
              ??___awmod 0074                ??___lwdiv 007A                ??___lwmod 0074  
        ___awmod@divisor 0070          ___awmod@counter 0075  __end_of__initialization 01B2  
         __pcstackCOMMON 0070             __pidataBANK0 036E           _OPTION_REGbits 0095  
             __pbssBANK0 0020               __pmaintext 01B6                  ?___wmul 0070  
             __pintentry 0004                  _SSPCON1 0215                  _SSPCON2 0216  
                _SSPSTAT 0214                  ___awmod 028C          __size_of___wmul 001F  
                ___lwdiv 02DF                  ___lwmod 031B                  _disable 0032  
                __ptext2 034F                  __ptext3 031B                  __ptext4 02DF  
                __ptext5 028C             __size_of_ICR 0198         ___awmod@dividend 0072  
                _segment 0037                  clrloop0 0380               _recv_count 0036  
             _recv_score 0030     end_of_initialization 01B2                  init_ram 0379  
                initloop 037A           __end_of___wmul 036E      start_initialization 019E  
            __end_of_ICR 019C                 ??___wmul 0074              __pdataBANK0 0037  
               ICR@count 002C                 ICR@index 0041                 ICR@score 002E  
              ___latbits 0003            __pcstackBANK0 0042         ___lwdiv@dividend 0078  
               ?___awmod 0070                 ?___lwdiv 0076                 ?___lwmod 0070  
       ___lwdiv@quotient 007B                _recv_data 0029           ___wmul@product 0074  
              clear_ram0 037F                _score_dig 0020        ___wmul@multiplier 0070  
       __size_of___awmod 0053         __size_of___lwdiv 003C         __size_of___lwmod 0034  
        ___lwdiv@divisor 0076          ___lwdiv@counter 007D            __size_of_main 00D6  
               int$flags 007E                 intlevel1 0000         ___lwmod@dividend 0072  
        ___lwmod@divisor 0070          ___lwmod@counter 0075              _roll_number 0033  
